// Generated by CoffeeScript 1.3.3
(function() {

  (function(window) {
    var $, Backbone, localStorage, _;
    Backbone = window.Backbone;
    _ = window._;
    $ = window.$;
    localStorage = window.localStorage;
    return Backbone.Collection.prototype.sync = function(method, collection, options) {
      var cache_data, cache_meta, jqXHR, that, url;
      if (!collection.cache) {
        return Backbone.sync.apply(that, arguments);
      }
      url = _.isFunction(collection.url) ? collection.url() : collection.url;
      cache_data = JSON.parse(localStorage.getItem(url));
      cache_meta = JSON.parse(localStorage.getItem(collection.cache));
      that = this;
      if (collection.cache) {
        if (cache_data) {
          return $.get(collection.cache, function(data) {
            var jqXHR;
            if (_.isEqual(data, cache_meta)) {
              options.success.call(that, cache_data, "success", $.Deferred().resolve());
              return $.Deferred().resolve();
            } else {
              localStorage.setItem(collection.cache, JSON.stringify(data));
              jqXHR = Backbone.sync.apply(that, arguments);
              jqXHR.then(function(data) {
                return localStorage.setItem(url, JSON.stringify(data));
              });
              return jqXHR;
            }
          });
        } else {
          $.get(collection.cache, function(data) {
            return localStorage.setItem(collection.cache, JSON.stringify(data));
          });
          jqXHR = Backbone.sync.apply(that, arguments);
          jqXHR.then(function(data) {
            return localStorage.setItem(url, JSON.stringify(data));
          });
          return jqXHR;
        }
      }
    };
  })(this);

}).call(this);
